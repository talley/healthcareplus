---change row color--
  private void gridView1_RowStyle(object sender, RowStyleEventArgs e)
        {
            string statut = Convert.ToString(gridView1.GetRowCellValue(e.RowHandle, "Statut"));

            if (statut =="InActif")
            {
                e.Appearance.BackColor = Color.Red;
            }
            else
            {
               // e.Appearance.BackColor = Color.LightGreen;
            }

            //Override any other formatting
            e.HighPriority = true;
        }

        ---row click----------

        Thank you for the detailed description.

As described in our documentation:
The GridView.RowClick event allows you to respond to clicking a row. The event will not fire when clicking on a row cell, if data editing is enabled and the  ColumnViewOptionsBehavior.EditorShowMode property is set to  MouseDown (and to  Default, if multiple row selection is disabled).

As you set the Gridview.OptionBehaviour.Editable property to True, this event is not raised. To get a value from the currently selected row, handle the GridView.FocusedRowObjectChanged event and then use the e.Row property to get the actual row data.

Should you have additional questions, let us know.

public frAdminManageUsers(string email)
        {
            InitializeComponent();
            _email = email;
            gridView1.FocusedRowObjectChanged += GridView1_FocusedRowObjectChanged;
        }

        private void GridView1_FocusedRowObjectChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowObjectChangedEventArgs e)
        {
            var data = e.Row;

        }
--------------best fit EditLookUp-------------
 private void BestFitLookupEdit(LookUpEdit lookupctrl)
        {
            lookupctrl.Properties.BestFit();
            int width = 0;
            foreach (LookUpColumnInfo column in lookupctrl.Properties.Columns)
                width += column.Width;
            lookupctrl.Properties.PopupWidth = width + 4;
        }

----------------hide column after loading data-----

gridView1.Columns["Id"].Visible = false;

--------------grid cell color------------
void gridView1_RowCellStyle(object sender, RowCellStyleEventArgs e)  {
            GridView currentView = sender as GridView;
            if (e.Column.FieldName == "Customer")   {
                bool value = Convert.ToBoolean(currentView.GetRowCellValue(e.RowHandle, "Flag_Customer"));
                if (value)
                    e.Appearance.BackColor = Color.Red;
            }
            if (e.Column.FieldName == "Vendor")   {
                bool value = Convert.ToBoolean(currentView.GetRowCellValue(e.RowHandle, "Flat_Vendor"));
                if (value)
                    e.Appearance.BackColor = Color.Red;
            }
        }
------------grid double click-----------------------
private void gridView1_DoubleClick(object sender, EventArgs e)
        {

            GridView view = (GridView)sender;
            Point pt = view.GridControl.PointToClient(MousePosition);
            GridHitInfo info = view.CalcHitInfo(pt);
            if ((info.InRow || info.InRowCell) &  info.Column != null)
	        {
                var grid = sender as GridView;
                Object cellValue = view.GetRowCellValue(info.RowHandle, info.Column);
                //MessageBox.Show(string.Format("Made a doubleclick at rowhandle: {0}, columnhandle: {1}, value: {2}.",
                //    info.RowHandle, info.Column.ColumnHandle, cellValue));
                    dynamic selected_row = grid.GetRow(info.RowHandle);
                   if (selected_row != null)
                   {
                        new fruEditPatient(selected_row.Id, "test@test.com").ShowDialog();
                    }
            }
        }

        --------------set text value LookupEdit(combo)-------------
         drpgenres.Properties.NullText=patient.genre;

         --------------enable paging-------------

         gridcontrol1 -> EmbeddedNavigator